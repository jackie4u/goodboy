@page "/import"

@using GoodBoy.Core.Features.Products

@attribute [Authorize]

@inject HttpClient HttpClient
@inject NavigationManager NavManager

@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

<MudPopoverProvider />

<PageTitle>Import Products</PageTitle>

<MudContainer>
    <MudText Typo="Typo.h3" GutterBottom="true">Import Products from XML</MudText>

    <ErrorMessage Message="@_errorMessage" />

    <MudTextField T="string" Label="XML Content" Lines="20" @bind-Value="_xmlContent" />

    <MudButton Variant="Variant.Filled"
               Color="Color.Primary"
               Class="mt-4"
               OnClick="ImportProducts"
               Disabled="_processing">
        @if (_processing)
        {
            <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
            <MudText Class="ms-2">Importing...</MudText>
        }
        else
        {
            <MudText>Import</MudText>
        }
    </MudButton>
</MudContainer>

@code {
    private string _xmlContent = ProductsFeedXml.LoadXmlContent();
    private bool _processing = false;
    private string? _errorMessage;

    private async Task ImportProducts()
    {
        _processing = true;

        try
        {
            var request = new ImportProductsRequest { XmlContent = _xmlContent };
            var response = await HttpClient.PostAsJsonAsync(ImportProductsRequest.RouteTemplate, request, CancellationToken.None);
            // Note: Redirect to the product detail page after successful creation
            NavManager.NavigateTo("/");
        }
        catch (Exception ex)
        {
            _errorMessage = $"Error importing products: {ex.Message}";
            Console.WriteLine(_errorMessage);
        }
        finally
        {
            _processing = false;
        }
    }
}