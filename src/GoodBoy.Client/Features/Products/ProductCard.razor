@inject NavigationManager NavManager
@* @rendermode InteractiveWebAssembly *@

<MudCard Class="mud-elevation-8" Style="width: 300px; height: 450px;">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">@Product.Name</MudText>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardMedia Image="@(!string.IsNullOrWhiteSpace(Product.MainPicture) ? Product.MainPicture : "https://via.placeholder.com/286x190.jpg?text=No+Product+Image")"
                  Style="height:200px; width:auto; object-fit: cover; object-position: top;" />
    <MudCardContent>
        <MudText>@Product.Description</MudText>

        <MudGrid Class="mt-2">
            <MudItem xs="6">
                <MudText Typo="Typo.h6">
                    @(Math.Round(Product.Price)) @Product.Currency
                </MudText>
            </MudItem>
            <MudItem xs="6" Class="d-flex align-center justify-center">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => NavManager.NavigateTo($"/product/{Product.Id}"))">Details</MudButton>
            </MudItem>
            <MudItem xs="6">
                <MudText Typo="Typo.body2" Class="mud-theme-text-secondary">
                    <b>Category:</b> @Product.Categories
                </MudText>
            </MudItem>
            <MudItem xs="6">
                <MudText Typo="Typo.body2" Class="mud-theme-text-secondary">
                    <b>Quantity:</b> @Product.Quantity
                </MudText>
            </MudItem>
        </MudGrid>
    </MudCardContent>
</MudCard>

@code {
    [Parameter, EditorRequired] public ProductDto Product { get; set; } = default!;
}