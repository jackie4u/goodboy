@page "/"
@using GoodBoy.Core.Features.Products

@inject HttpClient httpClient

@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))

<PageTitle>Explore Products</PageTitle>

<MudContainer>
    @if (_products == null)
    {
        <p>Loading Products...</p>
    }
    else
    {
        <MudText Typo="Typo.h3" GutterBottom="true">Products</MudText>
        <MudText Typo="Typo.body1" GutterBottom="true">Find awesome products here.</MudText>

        @if (_products.Any())
        {
            <MudGrid Spacing="2" Class="mt-8">
                @foreach (var product in _products)
                {
                    <MudItem xs="12" sm="6" md="4" lg="4">
                        <ProductCard Product="product" />
                    </MudItem>
                }
            </MudGrid>
        }
        else
        {
            <MudText Typo="Typo.h5" Align="Align.Center">No products found.</MudText>
        }
    }
</MudContainer>

@code {
     private List<ProductDto> _products = new List<ProductDto>();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await httpClient.GetFromJsonAsync<GetProductsRequest.Response>(GetProductsRequest.RouteTemplate, CancellationToken.None);
            _products = response?.Products ?? new List<ProductDto>();
        }
        catch (Exception ex)
        {
            Console.WriteLine($"There was a problem loading ProductDto data: {ex.Message}");
        }
    }
}